install.packeges(c("gmodels","readxl","janitor","rvest","scales","tibble"))
install.packages(c("gmodels","readxl","janitor","rvest","scales","tibble"))
install.packages(c("gmodels","readxl","janitor","rvest","scales","tibble"))
install.packages(rvest")
install.packages("rvest")
install.packages("rvest")
library(pacman)
library(tibble)
library(gmodels)
library(rvest)
library(ggplot2)
library(GGally)
library(stringr)
library(formattable)
library(data.table)
library(openxlsx)
library(readxl)
library(scales)
library(janitor)
install.packages("plotly")
library(plotly)
library(DBI)
library(RSQLite)
library(sqldf)
install.packages("quantmod")
link<-"https://www.nasdaq.com/market-activity/stocks/screener"
dd<-read_html(link)
dd<-dd %>% html_table(fill = TRUE)
dd<-read_html(link)
link<-"https://www.cnbc.com/nasdaq-100/"
dd<-read_html(link)
dd<-dd %>% html_table(fill = TRUE)
dd[[1]]
dd
dd
link<-"https://finance.yahoo.com/markets/stocks/gainers/"
dd<-read_html(link)
dd<-dd %>% html_table(fill = TRUE)
dd
dd %>% view()
install.packages("readr")
library(readr)
mm<-mtcars[,c(1:5,9)]
mm %>% head()
mm
mm %>% view
mm[c(1:16),]
mm[c(17:32),]
p1<-mm[c(1:16),]
p2<-mm[c(17:32),]
write_csv(p1,"~/Desktop/p1.csv")
write_csv(p1,"~/Desktop/p2.csv")
fils<-list.files(path = "~/Desktop/",pattern = "\\*.csv")
lapply(fils,"read_csv")
read_csv(fils,id = "p1")
fils<-list.files(path = "~/Desktop/",pattern = "\\*.csv$")
read_csv(fils,id = "p1")
fils<-list.files(path = "~/Desktop/",pattern = "\\*.csv$",full.names = T)
read_csv(fils,id = "p1")
fils<-list.files(path = "~/Desktop/",pattern = "\\*.csv$",full.names = T,recursive = T)
read_csv(fils,id = "p1")
readr::read_csv(fils,id = "p1")
lapply(fils,read_csv)
fils<-list.files(path = "~/Desktop/",pattern = "*.csv",full.names = T,recursive = T)
lapply(fils,read_csv)
lapply(fils,read_csv)[[1]]
lapply(fils,read_csv)[[1]] %>% view()
lapply(fils,read_csv)[[2]] %>% view()
lapply(fils,read_csv)[[1]] %>% view()
lapply(fils,read_csv)[[2]] %>% view()
lapply(fils,read_csv) %>% view()
write_csv(p2,"~/Desktop/p2.csv")
fils<-list.files(path = "~/Desktop/",pattern = "*.csv",full.names = T,recursive = T)
lapply(fils,read_csv)[[2]] %>% view()
write_csv(p2,"~/Desktop/p2.csv")
lapply(fils,read_csv)%>% view()
lapply(fils,read_csv) %>% view()
rm(fils)
p1<-mm[c(1:16),]
p2<-mm[c(17:32),]
write_csv(p1,"~/Desktop/p1.csv")
write_csv(p2,"~/Desktop/p2.csv")
fils<-list.files(path = "~/Desktop/",pattern = "*.csv",full.names = T,recursive = T)
lapply(fils,read_csv) %>% view()
lapply(fils,read_csv)
lapply(fils,read_csv)[[2]]
lapply(fils,read_csv)[[1]]
p1<-data.frame(lapply(fils,read_csv)[[1]] )
p1
p2<-data_frame(lapply(fils,read.csv))
p2
p2<-data_frame(lapply(fils,read_csv))
p2
write_csv(p2,"~/Desktop/p2.csv")
fils<-list.files(path = "~/Desktop/",pattern = "*.csv",full.names = T,recursive = T)
p2<-data_frame(lapply(fils,read_csv)[[2]])
p2
p1
p2<-mm[c(17:32),]
write_csv(p2,"~/Desktop/p2.csv")
fils<-list.files(path = "~/Desktop/",pattern = "*.csv",full.names = T,recursive = T)
p1<-data.frame(lapply(fils,read_csv)[[1]] )
p2<-data_frame(lapply(fils,read_csv)[[2]])
p2
rbind(p1,p2)
library(pacman)
install.packages(DT)
install.packages(DT)
install.packages("DT")
p_load(c("janitor","tibble","scales","lubridate","formattable",
"data.table","stringr","DT","rvest","readr","readxl"))
p_load(c("janitor","tibble","scales","lubridate","formattable",
"data.table","stringr","DT","rvest","readr","readxl","tidyr","dplyr"))
library(dplyr)
library(tidyr)
library(pacman)
p_load(c("janitor","tibble","scales","lubridate","formattable",
"data.table","stringr","DT","rvest","readr","readxl","tidyr","dplyr"))
library(lubridate)
library(formattable)
library(data.table)
library(tibble)
library(stringr)
library(openxlsx)
library(rvest)
library(janitor)
library(readr)
library(scales)
library(DT)
install.packages(gt)
install.packages("gt")
list.dirs("~/Desktop/")
library(gt)
install.packages("forecast")
library(GGally)
install.packages("timeSeries")
clin<-"https://ta3weem.com/"
cur<-read_html(clin)
cur<-cur %>% html_table(fill=TRUE)
cur
cur[[1]]
cur[[3]]
cur[[5]]
cur[[6]]
cur[[6]] %>% view()
cur[[7]] %>% view()
cur[[10]] %>% view()
cur[[9]] %>% view()
install.packages("quarto")
library(quarto)
library(pacman)
p_load(c("janitor","tibble","scales","lubridate","formattable",
"data.table","stringr","DT","GGally","","gt","openxlsx",
"rvest","readr","readxl","tidyr","dplyr"))
p_load("janitor","tibble","scales","lubridate","formattable",
"data.table","stringr","DT","GGally","","gt","openxlsx",
"rvest","readr","readxl","tidyr","dplyr")
p_load("janitor","tibble","scales","lubridate","formattable",
"data.table","stringr","DT","GGally","gt","openxlsx",
"rvest","readr","readxl","tidyr","dplyr")
install.packages("RPostgreSQL")
library(DBI)
install.packages("odbc")
library("odbc")
install.packages("RODBC")
install.packages(PostgreSQL)
install.packages(RPostgreSQL)
install.packages(RPostgreSQL)
update.packages()
install.packages(RPostgreSQL)
install.packages("RPostgreSQL")
install.packages("RPostgreSQL")
link<-"https://finance.yahoo.com/markets/stocks/gainers/"
dd<-read_html(link)
dd<-dd %>% html_table(fill = TRUE)
dd %>% view()
d<-read.xlsx("~/Data/Marketing/dashboard_webinar.xlsx",sheet = "Data")
d %>% summary()
d %>% head()
table(d$Suburb,d$State)
table(d$Suburb,d$Category)
table(d$Suburb,d$Category) %>%head
knitr::opts_chunk$set(echo = TRUE)
library(hrbrthemes)
install.packages("prettydoc")
install.packages("hrbrthemes")
knitr::opts_chunk$set(echo = TRUE)
library(hrbrthemes)
knitr::opts_chunk$set(echo = TRUE)
library(hrbrthemes)
library(hrbrthemes)
library(hrbrthemes)
install.packages("hrbrthemes")
install.packages(c("systemfonts","gdtools","hrbrthemes"))
install.packages(c("systemfonts","gdtools"))
library(ggplot2)
install.packages('https://cran.r-project.org/src/contrib/Archive/hrbrthemes/hrbrthemes_0.1.0.tar.gz', type='source', repos=NULL)
install.packages("hrbrthemes")
library(hrbrthemes)
knitr::opts_chunk$set(echo = TRUE)
library(hrbrthemes)
library(prettydoc)
library(pacman)
p_load("quantmod","stringr","forecast","tseries","janitor",
"formattable","data.table","gt","DT","scales","tibble",
"ggplot2","plotly","GGally","openxlsx","readxl","dplyr","tidyr","lubridate")
library(lubridate)
dw<-getSymbols("^DJI",from="1900-01-01")
dw <-rownames_to_column(data.frame( DJI)) %>% select(c(1,7)) %>%
rename(date=rowname,price=DJI.Adjusted) %>%
mutate(date=ymd(date)) %>%
mutate(wk=round_date(date,"week"),mn=round_date(date,"month")) %>% arrange(date)
# months Last
dwm<-dw %>%  group_by(mn) %>% summarize(prices=mean(price))
dwts<-ts(dwm$prices,start = c(1992,1),end = c(2023,9),frequency = 12)
dwets<-ets(dwts)
dwfor<-forecast(dwets,h = 12)
months_last_chart<-
cbind(
dwm[c(382:393),] ,
rownames_to_column(as.data.frame(dwfor))
) %>% select(c(1,2,6)) %>% rename(date=mn) %>% clean_names() %>% mutate(date=as.POSIXct(date)) %>% pivot_longer(!date,names_to = "levels",values_to = "prices") %>% ggplot(aes(x=date,y=prices,group=levels,color=levels))+geom_line(size=1.3)+geom_point(size=3)+scale_color_brewer(palette = "Set1")+geom_label(aes(label=round(prices/1000,2)),size=3,nudge_x =.25 ,nudge_y = .25,size = 1)+labs(x="",y="",title = "Detect Last Year DowJones Prices Model",subtitle = "Data Focus Period: 1992 - Sep 2023")+scale_y_continuous(labels = comma)+theme_bw()+theme(axis.text.x = element_text(face = "bold",color="black"),axis.text.y = element_text(face = "bold",color="black"),legend.position = "top",plot.title = element_text(color = "#2c3e50",face = "bold"))+scale_x_datetime(date_breaks ="month" ,date_labels = "%b-%y")
months_last_gt<-
cbind(
dwm[c(382:393),] ,
rownames_to_column(as.data.frame(dwfor))
) %>% select(c(1,2,6)) %>% rename(date=mn) %>% clean_names() %>%
gt() %>%
tab_row_group(rows = date<="2023-12-31" ,label = "2023",id="2023") %>%
tab_row_group(rows = date>="2024-1-1" & date<="2024-12-01",label = "2024",id="2024") %>%
row_group_order(groups = c("2023","2024")) %>%
tab_header(title = "Detect Forecast DowJones Index Model",subtitle = "Period: 12 Months Last.") %>%
tab_stubhead(label = "Years") %>%
cols_label_with(columns = everything(),fn = toupper) %>%
tab_style(style =cell_text(align = "center",weight = "bold") ,locations = cells_body()) %>%
fmt_number(columns = c(2:3),decimals = 2) %>%
fmt_date(columns = 1,date_style = "yMMM") %>%
tab_style(style =list(cell_text(weight = "bold"),cell_fill("gray")) ,locations = cells_row_groups()) %>%
opt_stylize(style = 3) %>% tab_style(style =list(cell_text(weight = "bold")) ,locations = cells_column_labels()) %>%
tab_style(style = list(cell_text(weight = "bold",color="white"),cell_fill("#A04747")),locations = cells_title()) %>%
summary_rows(groups =everything(),fns =list(Mean=~mean(.)),columns = c(2,3)) %>%
tab_style(style = list(cell_text(weight = "bold"),cell_fill("#FCDE70")),
locations = cells_summary()) %>%
tab_style(style = list(cell_text(weight = "bold"),cell_fill("#FCDE70")),locations = cells_stub_summary())
#Real
dwrts<-ts(dwm$prices,start = c(1992,1),end = c(2024,9),frequency = 12)
dwrets<-ets(dwrts)
dwrfor<-forecast(dwrets,h = 12)
months_next_chart<-
cbind(
data.frame(date=seq(as.Date("2024-10-01"),by="month",len=12))
,
rownames_to_column(as.data.frame(dwrfor)) %>% select(c(4))) %>%
mutate(date=as.POSIXct(date)) %>% clean_names() %>%
ggplot(aes(x=date,y=hi_80))+geom_line(size=1.3)+geom_point(size=3)+
geom_label(aes(label=paste0(round(hi_80/1000,2),"K"),nudge_x =.25 ,nudge_y = .25))+
labs(x="",y="",title = "Detect Next Year DowJones Prices Model",subtitle = "Data Focus Period: 1992 - Sep 2024")+scale_y_continuous(labels = comma)+theme_bw()+theme(axis.text.x = element_text(face = "bold",color="black"),axis.text.y = element_text(face = "bold",color="black"),legend.position = "top",plot.title = element_text(color = "#2c3e50",face = "bold"))+scale_x_datetime(date_breaks ="month" ,date_labels = "%b-%y")
months_next_gt<-
cbind(
data.frame(date=seq(as.Date("2024-10-01"),by="month",len=12)),
rownames_to_column(as.data.frame(dwrfor)) %>% select(c(3,4))) %>%
clean_names() %>% mutate(prices="") %>% select(1,2,3) %>% gt() %>%
tab_row_group(rows = date>="2024-10-1" & date<="2024-12-01",label = "2024",id="2024") %>%
tab_row_group(rows = date>="2025-1-1" & date<="2025-12-01",label = "2025",id="2025") %>%
row_group_order(groups = c("2024","2025")) %>%
tab_header(title = "Forecast DowJones Index",subtitle = "Period: 18 Months Next.") %>%
tab_stubhead(label = "Years") %>%
cols_label_with(columns = everything(),fn = toupper) %>%
tab_style(style =cell_text(align = "center",weight = "bold") ,locations = cells_body()) %>%
fmt_number(columns = c(2:3),decimals = 2) %>%
fmt_date(columns = 1,date_style = "yMMM") %>%
tab_style(style =list(cell_text(weight = "bold"),cell_fill("gray")) ,locations = cells_row_groups()) %>%
opt_stylize(style = 3) %>% tab_style(style =list(cell_text(weight = "bold")) ,locations = cells_column_labels()) %>%
tab_style(style = list(cell_text(weight = "bold",color="white"),cell_fill("#A04747")),locations = cells_title()) %>%
summary_rows(groups = everything(),fns =list(Mean=~mean(.)),columns = c(2,3)) %>%
tab_style(style = list(cell_text(weight = "bold"),cell_fill("#FCDE70")),
locations = cells_summary()) %>%
tab_style(style = list(cell_text(weight = "bold"),cell_fill("#FCDE70")),locations = cells_stub_summary())
autoplot(decompose(diff(dwts)))
months_last_chart
months_last_gt
autoplot(decompose(diff(dwrts)))
months_next_chart
months_next_gt
dw %>% head
dw %>% mutate(months=format(date,"%b"),monthn=month(date),yearsyear(date))
dw %>% mutate(months=format(date,"%b"),monthn=month(date),years=year(date)) %>% head()
dw %>% mutate(months=format(date,"%b"),monthn=month(date),years=year(date)) %>% group_by(monthn,months,years) %>% summarize(prices=mean(price))
dw %>% mutate(months=format(date,"%b"),monthn=month(date),years=year(date)) %>% group_by(monthn,months,years) %>% summarize(prices=mean(price)) %>% arrange(years)
dw %>% mutate(months=format(date,"%b"),monthn=month(date),years=year(date)) %>% group_by(monthn,months,years) %>% summarize(prices=mean(price)) %>% arrange(years) %>% pivot_wider(names_from =years ,values_from =prices ,values_fill = FALSE)
dw %>% mutate(months=format(date,"%b"),monthn=month(date),years=year(date)) %>% group_by(monthn,months,years) %>% summarize(prices=mean(price),.groups = "drop") %>% arrange(years) %>% pivot_wider(names_from =years ,values_from =prices ,values_fill = FALSE)
dw %>% mutate(months=format(date,"%b"),monthn=month(date),years=year(date)) %>% group_by(monthn,months,years) %>% summarize(prices=mean(price),.groups = "drop") %>% arrange(desc(years)) %>% pivot_wider(names_from =years ,values_from =prices ,values_fill = FALSE)
dw %>% mutate(months=format(date,"%b"),monthn=month(date),years=year(date)) %>% group_by(monthn,months,years) %>% summarize(prices=mean(price),.groups = "drop") %>% arrange(desc(years)) %>% pivot_wider(names_from =years ,values_from =prices ,values_fill = FALSE) %>% select(2,3,4)
dw %>% mutate(months=format(date,"%b"),monthn=month(date),years=year(date)) %>% group_by(monthn,months,years) %>% summarize(prices=mean(price),.groups = "drop") %>% arrange(desc(years)) %>% pivot_wider(names_from =years ,values_from =prices ,values_fill = FALSE) %>% select(2,3,4) %>% filter('2024'>0)
dw %>% mutate(months=format(date,"%b"),monthn=month(date),years=year(date)) %>% group_by(monthn,months,years) %>% summarize(prices=mean(price),.groups = "drop") %>% arrange(desc(years)) %>% pivot_wider(names_from =years ,values_from =prices ,values_fill = FALSE) %>% select(2,3,4) %>% filter(2024>0)
dw %>% mutate(months=format(date,"%b"),monthn=month(date),years=year(date)) %>% group_by(monthn,months,years) %>% summarize(prices=mean(price),.groups = "drop") %>% arrange(desc(years)) %>% pivot_wider(names_from =years ,values_from =prices ,values_fill = FALSE) %>% select(2,3,4) %>% filter(! months %in% c("Nov","Dec"))
dw %>% mutate(months=format(date,"%b"),monthn=month(date),years=year(date)) %>% group_by(monthn,months,years) %>% summarize(prices=mean(price),.groups = "drop") %>% arrange(desc(years)) %>% pivot_wider(names_from =years ,values_from =prices ,values_fill = FALSE) %>% select(2,3,4) %>% filter(! months %in% c("Nov","Dec")) %>% clean_names()
dw %>% mutate(months=format(date,"%b"),monthn=month(date),years=year(date)) %>% group_by(monthn,months,years) %>% summarize(prices=mean(price),.groups = "drop") %>% arrange(desc(years)) %>% pivot_wider(names_from =years ,values_from =prices ,values_fill = FALSE) %>% select(2,3,4) %>% filter(! months %in% c("Nov","Dec")) %>% clean_names() %>% mutate(variance%=x2024/x2023)
dw %>% mutate(months=format(date,"%b"),monthn=month(date),years=year(date)) %>% group_by(monthn,months,years) %>% summarize(prices=mean(price),.groups = "drop") %>% arrange(desc(years)) %>% pivot_wider(names_from =years ,values_from =prices ,values_fill = FALSE) %>% select(2,3,4) %>% filter(! months %in% c("Nov","Dec")) %>% clean_names() %>% mutate(variance=x2024/x2023)
dw %>% mutate(months=format(date,"%b"),monthn=month(date),years=year(date)) %>% group_by(monthn,months,years) %>% summarize(prices=mean(price),.groups = "drop") %>% arrange(desc(years)) %>% pivot_wider(names_from =years ,values_from =prices ,values_fill = FALSE) %>% select(2,3,4) %>% filter(! months %in% c("Nov","Dec")) %>% clean_names() %>% mutate(variance=1-(x2024/x2023))
dw %>% mutate(months=format(date,"%b"),monthn=month(date),years=year(date)) %>% group_by(monthn,months,years) %>% summarize(prices=mean(price),.groups = "drop") %>% arrange(desc(years)) %>% pivot_wider(names_from =years ,values_from =prices ,values_fill = FALSE) %>% select(2,3,4) %>% filter(! months %in% c("Nov","Dec")) %>% clean_names() %>% mutate(variance=(x2024/x2023)-1)
dw %>% mutate(months=format(date,"%b"),monthn=month(date),years=year(date)) %>% group_by(monthn,months,years) %>% summarize(prices=mean(price),.groups = "drop") %>% arrange(desc(years)) %>% pivot_wider(names_from =years ,values_from =prices ,values_fill = FALSE) %>% select(2,3,4) %>% filter(! months %in% c("Nov","Dec")) %>% clean_names() %>% mutate(change=(x2024/x2023)-1)
dw %>% mutate(months=format(date,"%b"),monthn=month(date),years=year(date)) %>% group_by(monthn,months,years) %>% summarize(prices=mean(price),.groups = "drop") %>% arrange(desc(years)) %>% pivot_wider(names_from =years ,values_from =prices ,values_fill = FALSE) %>% select(2,3,4) %>% filter(! months %in% c("Nov","Dec")) %>% clean_names() %>% mutate(change=(x2024/x2023)-1,change_amt=x2024-x2023)
dw %>% mutate(months=format(date,"%b"),monthn=month(date),years=year(date)) %>% group_by(monthn,months,years) %>% summarize(prices=mean(price),.groups = "drop") %>% arrange(desc(years)) %>% pivot_wider(names_from =years ,values_from =prices ,values_fill = FALSE) %>% select(2,3,4) %>% filter(! months %in% c("Nov","Dec")) %>% clean_names() %>% mutate(change=percent( (x2024/x2023)-1),change_amt=x2024-x2023)
dw %>% tail(4)
dw %>% tail()
dwm
dwm %>% tail()
dwrts<-ts(dwm$prices,start = min(dwm$mn),end =max(dwm$mn),frequency = 12)
dwrets<-ets(dwrts)
